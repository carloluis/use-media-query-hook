{"version":3,"sources":["webpack:///./src/index.css?43fa","webpack:///./src/index.jsx"],"names":["module","exports","emoji","option","dirty","github","Demo","_ref","mediaQueryString","match","useMediaQuery","console","info","concat","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","styles","ReactDOM","render","_useState2","_slicedToArray","useState","mediaStr","setMediaStr","_useState4","value","setValue","inputClassname","undefined","Fragment","type","title","onChange","e","target","onClick","href","document","querySelector"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,MAAA,mBAAAC,OAAA,oBAAAC,MAAA,mBAAAC,OAAA,ygBCKlB,IAEMC,EAAO,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,iBACRC,EAAQC,YAAcF,GAK5B,OAHAG,QAAQC,KAAR,GAAAC,OAAgBL,EAAhB,QAAAK,OAAuCJ,IACvCE,QAAQC,KAAR,KAAAC,OAAkBJ,EAAQ,KAAO,MAAQ,mBAElCK,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOhB,OAAQO,EAAQ,KAAO,OAkCtDU,IAASC,OAAON,EAAAC,EAAAC,cA/BJ,WAAM,IAAAK,EAAAC,EACgBC,mBAZF,sBAWd,GACTC,EADSH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAAAJ,EAEUC,mBAbI,sBAWd,GAETI,EAFSD,EAAA,GAEFE,EAFEF,EAAA,GAIVG,EAAiBL,IAAaG,EAAQT,IAAOd,WAAQ0B,EAE3D,OACEhB,EAAAC,EAAAC,cAACF,EAAAC,EAAMgB,SAAP,KACEjB,EAAAC,EAAAC,cAACV,EAAD,CAAME,iBAAkBgB,IACxBV,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOf,QACrBW,EAAAC,EAAAC,cAAA,SACEC,UAAWY,EACXG,KAAK,OACLC,MAAM,yDACNN,MAAOA,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOT,UAEnCb,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMZ,EAAYE,KAAnC,uBAEFb,EAAAC,EAAAC,cAAA,KACEC,UAAWC,IAAOb,OAClB4B,MAAM,uCACNK,KAAK,oDACLF,OAAO,UAJT,0BAYU,MAASG,SAASC,cAAc","file":"main.b2be92189e88967f78cc.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"emoji\":\"src-index__emoji\",\"option\":\"src-index__option\",\"dirty\":\"src-index__dirty\",\"github\":\"src-index__github\"};","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMediaQuery from 'use-media-query-hook';\n\nimport styles from './index.css';\n\nconst DEFAULT_MEDIA_QUERY_STR = '(max-width: 425px)';\n\nconst Demo = ({ mediaQueryString }) => {\n  const match = useMediaQuery(mediaQueryString);\n\n  console.info(`${mediaQueryString} -> ${match}`);\n  console.info(`%c${match ? 'ðŸ“±' : 'ðŸ’»'}`, 'font-size: 32px');\n\n  return <h1 className={styles.emoji}>{match ? 'ðŸ“±' : 'ðŸ’»'}</h1>;\n};\n\nconst App = () => {\n  const [mediaStr, setMediaStr] = useState(DEFAULT_MEDIA_QUERY_STR);\n  const [value, setValue] = useState(DEFAULT_MEDIA_QUERY_STR);\n\n  const inputClassname = mediaStr !== value ? styles.dirty : undefined;\n\n  return (\n    <React.Fragment>\n      <Demo mediaQueryString={mediaStr} />\n      <div className={styles.option}>\n        <input\n          className={inputClassname}\n          type=\"text\"\n          title=\"Media query string to check when mobile emoji is shown\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n        <button onClick={() => setMediaStr(value)}>Update media query</button>\n      </div>\n      <a\n        className={styles.github}\n        title=\"GitHub project: use-media-query-hook\"\n        href=\"https://github.com/carloluis/use-media-query-hook\"\n        target=\"_blank\"\n      >\n        use-media-query-hook\n      </a>\n    </React.Fragment>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#app'));\n"],"sourceRoot":""}